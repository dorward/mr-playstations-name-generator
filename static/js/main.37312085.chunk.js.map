{"version":3,"sources":["Button.tsx","Random.tsx","ListView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","styled","button","Random","onClick","useState","over","setOver","onMouseEnter","onMouseLeave","Container","div","List","list","index","setList","html","join","onChange","event","value","target","ListView","lists","setLists","clean","replace","newLists","split","map","x","trim","filter","match","JSON","stringify","Header","header","Headline","h1","Name","p","array_pick","items","Math","floor","random","length","App","useLocalStorage","initialLists","jsonlists","parse","first","last","name","setName","newName","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uoCAEaA,EAASC,IAAOC,OAAV,+N,OCENC,EAAS,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,QAAuE,EACpEC,oBAAS,GAD2D,mBACrFC,EADqF,KAC/EC,EAD+E,KAE5F,OACI,eAACP,EAAD,CAAQI,QAASA,EAASI,aAAc,kBAAMD,GAAQ,IAAOE,aAAc,kBAAMF,GAAQ,IAAzF,WACMD,GAAQ,cAAC,IAAD,IACTA,GAAQ,cAAC,IAAD,Q,yBCLfI,EAAYT,IAAOU,IAAV,0YAsBTC,EAAO,SAAC,GAQM,IAPhBC,EAOe,EAPfA,KACAC,EAMe,EANfA,MACAC,EAKe,EALfA,QAUA,OACI,cAAC,IAAD,CAEIC,KAAMH,EAAKI,KAAK,MAChBC,SARa,SAACC,GAA0C,IACpDC,EAAUD,EAAME,OAAhBD,MACRL,EAAQK,EAAON,OAWVQ,EAAW,SAAC,GAA4F,IAA1FC,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,SACxBT,EAAU,SAACK,EAAeN,GAC5B,IAAMW,EAAQL,EAAMM,QAAQ,aAAc,MAAMA,QAAQ,iBAAkB,MACpEC,EAAQ,YAAOJ,GACrBI,EAASb,GAASW,EACbG,MAAM,MACNC,KAAI,SAACC,GAAD,OAAOA,EAAEC,UACbC,QAAO,SAACF,GAAD,OAAQA,EAAEG,MAAM,YAC5BT,EAASU,KAAKC,UAAUR,KAG5B,OACI,cAACjB,EAAD,UACKa,EAAMM,KAAI,SAAChB,EAAMC,GAAP,OACP,cAAC,EAAD,CAAMD,KAAMA,EAAMC,MAAOA,EAAmBC,QAASA,GAAhBD,SCnD/CsB,EAASnC,IAAOoC,OAAV,gHAMNC,EAAWrC,IAAOsC,GAAV,2EAKRC,EAAOvC,IAAOwC,EAAV,2EAKJC,EAAa,SAACC,GAAD,OAAqBA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UA6ChEC,EAzCH,WAAoB,IAAD,EACGC,YAAgB,QAASf,KAAKC,UAAUe,IAD3C,mBACpBC,EADoB,KACT3B,EADS,KAErBD,EAAQW,KAAKkB,MAAMD,GAFE,EAKH9C,mBAAS,CAC7BgD,MAAOX,EAAWnB,EAAM,IACxB+B,KAAK,GAAD,OAAKZ,EAAWnB,EAAM,KAAtB,OAA4BmB,EAAWnB,EAAM,OAP1B,mBAKpBgC,EALoB,KAKdC,EALc,KAUrBC,EAAU,WACZD,EAAQ,CACJH,MAAOX,EAAWnB,EAAM,IACxB+B,KAAK,GAAD,OAfqC,IAAnCV,KAAKC,MAAsB,GAAhBD,KAAKE,UAAuB,KAAO,IAehD,OAAYJ,EAAWnB,EAAM,KAA7B,OAAmCmB,EAAWnB,EAAM,QAQhE,OAJAmC,qBAAU,WACND,MACD,CAACN,IAGA,qCACI,eAACf,EAAD,WACI,cAACE,EAAD,oDACA,cAAC,EAAD,CAAQlC,QAASqD,IACjB,cAACzD,EAAD,CAAQI,QAvBN,kBAAMoB,EAASU,KAAKC,UAAUe,KAuBhC,SACI,cAAC,IAAD,SAGR,iCACI,eAACV,EAAD,WACKe,EAAKF,MADV,IACkBE,EAAKD,QAGvB,cAAC,EAAD,CAAU/B,MAAOA,EAAOC,SAAUA,WCpDnCmC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.37312085.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n    margin: 0 0 0 10px;\n    padding: 0;\n    font-size: 30px;\n    background: none;\n    vertical-align: middle;\n    line-height: 1;\n    border: none;\n    outline: none;\n    color: white;\n`;\n","import React, { useState } from 'react';\nimport { GiPerspectiveDiceSixFacesOne, GiPerspectiveDiceSixFacesSix } from 'react-icons/gi';\nimport { Button } from './Button';\n\nexport const Random = ({ onClick }: { onClick: (e: React.MouseEvent) => void }): JSX.Element => {\n    const [over, setOver] = useState(false);\n    return (\n        <Button onClick={onClick} onMouseEnter={() => setOver(true)} onMouseLeave={() => setOver(false)}>\n            {!over && <GiPerspectiveDiceSixFacesOne />}\n            {over && <GiPerspectiveDiceSixFacesSix />}\n        </Button>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport ContentEditable from 'react-contenteditable';\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    max-width: 30em;\n    margin: auto;\n    background: black;\n    gap: 1ex;\n\n    div {\n        padding: 1ex;\n        border: 0;\n        background-color: rgb(10, 10, 40);\n        color: white;\n        white-space: pre;\n    }\n\n    div div {\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nconst List = ({\n    list,\n    index,\n    setList,\n}: {\n    list: string[];\n    index: number;\n    setList: (newValue: string, index: number) => void;\n}): JSX.Element => {\n    const handleChange = (event: { target: { value: string } }) => {\n        const { value } = event.target;\n        setList(value, index);\n    };\n    return (\n        <ContentEditable\n            // innerRef={this.contentEditable}\n            html={list.join('\\n')}\n            onChange={handleChange} // handle innerHTML change\n        />\n    );\n};\n\nexport const ListView = ({ lists, setLists }: { lists: string[][]; setLists: (s: string) => void }): JSX.Element => {\n    const setList = (value: string, index: number) => {\n        const clean = value.replace(/<br[^>]*>/g, '\\n').replace(/<\\/?div[^>]*>/g, '\\n');\n        const newLists = [...lists];\n        newLists[index] = clean\n            .split('\\n')\n            .map((x) => x.trim())\n            .filter((x) => !x.match(/^\\s*$/));\n        setLists(JSON.stringify(newLists));\n    };\n\n    return (\n        <Container>\n            {lists.map((list, index) => (\n                <List list={list} index={index} key={index} setList={setList} />\n            ))}\n        </Container>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport initialLists from './initial-data.json';\nimport useLocalStorage from 'react-use-localstorage';\nimport { BiReset } from 'react-icons/bi';\n\nimport { Random } from './Random';\nimport { ListView } from './ListView';\nimport { Button } from './Button';\n\nconst Header = styled.header`\n    display: flex;\n    justify-content: center;\n    background: rgb(10, 10, 40);\n`;\n\nconst Headline = styled.h1`\n    font-size: 120%;\n    text-align: center;\n`;\n\nconst Name = styled.p`\n    font-size: 200%;\n    text-align: center;\n`;\n\nconst array_pick = (items: string[]) => items[Math.floor(Math.random() * items.length)];\n\nconst mc = () => (Math.floor(Math.random() * 10) === 0 ? 'Mc' : '');\n\nconst App = (): JSX.Element => {\n    const [jsonlists, setLists] = useLocalStorage('lists', JSON.stringify(initialLists));\n    const lists = JSON.parse(jsonlists);\n    const reset = () => setLists(JSON.stringify(initialLists));\n\n    const [name, setName] = useState({\n        first: array_pick(lists[0]),\n        last: `${array_pick(lists[1])}${array_pick(lists[2])}`,\n    });\n\n    const newName = () => {\n        setName({\n            first: array_pick(lists[0]),\n            last: `${mc()}${array_pick(lists[1])}${array_pick(lists[2])}`,\n        });\n    };\n\n    useEffect(() => {\n        newName();\n    }, [jsonlists]);\n\n    return (\n        <>\n            <Header>\n                <Headline>Mr. Playstation&lsquo;s Name Generator</Headline>\n                <Random onClick={newName}></Random>\n                <Button onClick={reset}>\n                    <BiReset />\n                </Button>\n            </Header>\n            <main>\n                <Name>\n                    {name.first} {name.last}\n                </Name>\n\n                <ListView lists={lists} setLists={setLists} />\n            </main>\n        </>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}